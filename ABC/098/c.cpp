/* 問題文
N 人の人が東西方向に一列に並んでいます。 それぞれの人は、東または西を向いています。 誰がどの方向を向いているかは長さN の文字列S によって与えられます。 西からi 番目に並んでいる人は、Si = E なら東を、Si = W なら西を向いています。
あなたは、N 人のうち誰か1 人をリーダーとして任命します。 そして、リーダー以外の全員に、リーダーの方向を向くように命令します。 このとき、リーダーはどちらの方向を向いていても構いません。
並んでいる人は、向く方向を変えるのを嫌っています。 そのためあなたは、向く方向を変える人数が最小になるようにリーダーを選びたいです。 向く方向を変える人数の最小値を求めてください。

制約
2≤N≤3×10^5
∣S∣=N
Si は E または W である */

#include <iostream>
#include <vector>
using namespace std;

int main() {
    int n;
    string s;
    cin >> n >> s;

    // 東、西を向いている人それぞれの累積和を保持する配列を用意
    vector<int> E(n), W(n);

    // 累積和を計算
    for (int i = 0; i < n; ++i) {
        if (s[i] == 'E') E[i] = 1;
        else W[i] = 1;
    }

    for (int i = 0; i < n; ++i) {
        E[i] += E[i-1];
        W[i] += W[i-1];
    }

    // 条件を満たす最小値を計算
    int ans = 1e9;
    for (int i = 0; i < n; ++i) {
        int cur = 0;
        if (i) cur += W[i-1]; // i>0なら、西を向いている人を東に向けなければならない
        cur += E[n-1] - E[i]; // iより東にいる人で東を向いている人を西に向ける
        ans = min(ans, cur);
    }
    cout << ans << endl;

    return 0;
}
