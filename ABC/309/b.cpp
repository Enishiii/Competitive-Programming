/* 問題文
N 行 N 列のマス目が与えられます。上から i 行目、左から j 列目のマスには整数
Ai,j が書かれています。ここで、Ai,j は0 か1 であることが保証されます。
マス目の外側のマスに書かれた整数を時計回りに 1 個ずつずらしたときのマス目を出力してください。

ただし外側のマスとは、1 行目、N 行目、1 列目、N 列目のいずれか 1 つ以上に属するマスの集合のことを指します。

制約
2≤N≤100
0≤A i,j ≤1(1≤i,j≤N)
入力は全て整数 */

#include <iostream>
#include <vector>
using namespace std;

int main() {
    // 入力
    int n;
    cin >> n;

    vector<string> a(n);
    for (int i = 0; i < n; ++i) cin >> a[i];

    // 問題文の通りに実装する。角の処理が難しいので、同じマスをもう１つ用意して、ずらした結果を代入していく。
    vector<string> b = a;

    // 上辺の数字を右にずらす
    for (int j = 0; j < n-1; ++j) b[0][j+1] = a[0][j];

    // 右辺の数字を下にずらす
    for (int i = 0; i < n-1; ++i) b[i+1][n-1] = a[i][n-1];

    // 下辺の数字を右にずらす
    for (int j = n-1; j > 0; --j) b[n-1][j-1] = a[n-1][j];

    // 左辺の数字を上にずらす
    for (int i = n-1; i > 0; --i) b[i-1][0] = a[i][0];

    // 4つの角の処理
    b[0][0] = a[1][0]; // 左上
    b[0][n-1] = a[0][n-2]; // 右上
    b[n-1][n-1] = a[n-2][n-1]; // 右下
    b[n-1][0] = a[n-1][1]; // 左下

    for (int i = 0; i < n; ++i) cout << b[i] << endl;

    return 0;
}
