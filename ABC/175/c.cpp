/* 問題文
数直線上で暮らす高橋君は、今座標 X にいます。これから高橋君はちょうど K 回、座標の正または負の方向に D 移動する行為を繰り返そうと考えています。
より正確には、1 回の移動では 座標 x から x+D または x−D に移動できます。
高橋君は、ちょうど K 回移動した後にいる座標の絶対値が最小となるように移動したいです。
K 回の移動後の座標の絶対値としてあり得る値の最小値を求めてください。

制約
−10^15 ≤ X ≤ 10^15
1 ≤ K ≤ 10^15
1 ≤ D ≤ 10^15
入力は全て整数である */

#include <iostream>
#include <algorithm>
using namespace std;
using ll = long long;

int main() {
    ll x, k, d;
    cin >> x >> k >> d;

    // 初期位置を正の値に変換
    x = abs(x);

    // 初期位置から0方向へ進める最大ステップ数を計算
    ll step_to_zero = min(k, x / d);

    // 残りの移動回数と現在の位置を調整
    k -= step_to_zero;
    x -= step_to_zero * d;

    // 残りの移動回数の偶奇に基づいて最終位置を決定
    if (k % 2 == 0) {
        cout << x << endl; // 偶数なら行って戻ってを繰り返せば良いので、現在の位置
    } else {
        cout << d - x << endl; // ゼロから一歩離れる
    }

    return 0;
}
