/* 問題文
縦横に無限に広がるマス目があり、そのうちの連続するN 行M 列の領域のすべてのマスに表裏の区別できるカードが置かれています。 最初はすべてのカードが表を向いています。
以下の操作を、カードが置かれている全てのマスについて
1 度ずつ行います。
    ・そのマスと辺または点で接する8 つのマスと、そのマスの合計9 マスについて、カードが存在するなら裏返す。
すべての操作を行った後の各カードの状態は操作を行う順番に依らないことが証明できます。 すべての操作を行った後、裏を向いているカードの枚数を求めてください。

制約
1≤N,M≤10^9
入力は全て整数である */

#include <iostream>
using namespace std;

int main() {
    long long n, m;
    cin >> n >> m;

    // n <= m の状態にしておく
    if (n > m) swap(n, m);

    // 裏返す回数が偶数なら表、奇数なら裏になる
    if (n == 1) {
        // 1マスだけの時は、裏返す回数は1回（奇数）なので裏
        if (m == 1) cout << 1 << endl;

        // 両端のみ2回、それ以外は3回裏返されるので両端を除いた数が裏を向いているマスの数
        else cout << m-2 << endl;
    } else {
        // 両端は４回、各辺は６回裏返されるので表になる。それ以外のマスの数を求める
        cout << (n-2) * (m-2) << endl;
    }

    return 0;
}
